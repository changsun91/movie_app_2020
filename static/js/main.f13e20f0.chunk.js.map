{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","key","slice","prototype","id","PropTypes","number","isRequired","string","arrayOf","App","state","isLoading","moives","getMovies","a","axios","get","movies","data","console","log","setState","this","movie","medium_cover_image","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0UAIA,SAASA,EAAT,GAA0D,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC7C,OACE,yBAAKC,UAAU,SACb,yBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,yBAAKI,UAAU,eACb,wBAAIA,UAAU,gBAAgBJ,GAC9B,wBAAII,UAAU,eAAeL,GAC7B,wBAAIK,UAAU,UAEXD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACV,wBAAIC,IAAKD,EAAOL,UAAU,iBACvBI,OAIP,uBAAGJ,UAAU,kBAAkBH,EAAQU,MAAM,EAAG,QAMxDb,EAAMc,UAAY,CAChBC,GAAIC,IAAUC,OAAOC,WACrBjB,KAAMe,IAAUC,OAAOC,WACvBhB,MAAOc,IAAUG,OAAOD,WACxBf,QAASa,IAAUG,OAAOD,WAC1Bd,OAAQY,IAAUG,OAAOD,WACzBb,OAAQW,IAAUI,QAAQJ,IAAUG,QAAQD,YAG/BlB,QC2BAqB,G,kNAvDbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAKVC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IACd,4DANQ,gBAGEC,EAHF,EAERC,KACEA,KAAQD,OAMZE,QAAQC,IAAIH,GACZ,EAAKI,SAAS,CAAEJ,SAAQN,WAAW,IAVzB,2C,kEAeVW,KAAKT,c,+BAGG,IAAD,EACuBS,KAAKZ,MAA3BC,EADD,EACCA,UAAWM,EADZ,EACYA,OACnB,OAGE,6BAASvB,UAAU,aAChBiB,EACC,yBAAKjB,UAAU,UACb,0BAAMA,UAAU,gBAAhB,eAGF,yBAAKA,UAAU,UACZuB,EAAOpB,KAAI,SAAC0B,GAAD,OACV,kBAAC,EAAD,CACEvB,IAAKuB,EAAMpB,GACXA,GAAIoB,EAAMpB,GACVd,KAAMkC,EAAMlC,KACZC,MAAOiC,EAAMjC,MACbC,QAASgC,EAAMhC,QACfC,OAAQ+B,EAAMC,mBACd/B,OAAQ8B,EAAM9B,kB,GA9CZgC,IAAMC,YCDxBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,a","file":"static/js/main.f13e20f0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n//state가 필요없는경우 calss component로 할필요가없음 function으로 작업\r\nfunction Movie({ year, title, summary, poster, genres }) {\r\n  return (\r\n    <div className=\"movie\">\r\n      <img src={poster} alt={title} title={title}></img>\r\n      <div className=\"movie__data\">\r\n        <h3 className=\"movie__title\">{title}</h3>\r\n        <h5 className=\"movie__year\">{year}</h5>\r\n        <ul className=\"genres\">\r\n          {/* 모든 map에는 key가필요하다. id를가져올수없는경우 index를이용하여 key를넣어줄수있다. */}\r\n          {genres.map((genre, index) => (\r\n            <li key={index} className=\"genres__genre\">\r\n              {genre}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <p className=\"movie__summary\">{summary.slice(0, 180)}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nMovie.prototype = {\r\n  id: PropTypes.number.isRequired,\r\n  year: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired,\r\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nexport default Movie;\r\n","import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    moives: [],\n  };\n\n  //javascript에게 getMovie function에게 시간이 필요하고, 우린그걸 기다려야한다고 알려줘야함 그게 async -> 비동기이고, 기다려야한다는걸알려줌 await\n  //getMovies는 axios.get을 사용하지만 axios.get은 완료되기까지 시간이필요하기떄문에 await을넣어서 기다려준다.\n  getMovies = async () => {\n    const {\n      data: {\n        data: { movies },\n      },\n    } = await axios.get(\n      \"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\"\n    );\n    //console.log(movies.data.data.movies)\n    console.log(movies);\n    this.setState({ movies, isLoading: false });\n  };\n\n  //componentDidMount함수가 끝날 때까지 시간이 걸릴수있으니 작업을해줘야함\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  render() {\n    const { isLoading, movies } = this.state;\n    return (\n      // javascript class안에 있으면 component class에 의해 혼란스러워진다. 그렇기떄문에 className을써줘야한다.\n      //className으로 작성하여도 html에선 class로 변경되어나옴.\n      <section className=\"container\">\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader__text\">Loading...</span>\n          </div>\n        ) : (\n          <div className=\"movies\">\n            {movies.map((movie) => (\n              <Movie\n                key={movie.id}\n                id={movie.id}\n                year={movie.year}\n                title={movie.title}\n                summary={movie.summary}\n                poster={movie.medium_cover_image}\n                genres={movie.genres}\n              />\n            ))}\n          </div>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"potato\")\n);\n//<App />을 component라 부름 react는 component와 함께 동작하게됨, 모든것은 component\n//component는 HTML을 반환하는 함수\n//이러한 javascript와 HTML 사이의 조합을 jsx라고 부름\n\n//react application이 하나의 component만을 rendering해줌 그렇기때문에 추가하고싶다면 App Component에서 추가를해줌\n"],"sourceRoot":""}